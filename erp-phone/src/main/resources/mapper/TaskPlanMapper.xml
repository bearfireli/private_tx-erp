<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hntxrj.txerp.mapper.TaskPlanMapper">
    <update id="verifyTaskPlan">
        update PT_TaskPlan
        set VerifyStatus=#{verifyStatus},
            verifyid='0225',
            verifyTime=#{verifyTime},
            updownmark=0
        where compid = #{compid}
          and taskid = #{taskId}
    </update>

    <select id="getTaskPlanList" resultType="com.hntxrj.txerp.vo.TaskPlanListVO">
        select tp.compid,
        DD_PublicInfo_3.PI_TypeName as taskStatusName,
        tp.TaskId,
        tp.CreateTime,
        tp.PreTime,
        tp.TaskOverTime,
        tp.PreNum,
        sum(ProduceNum)overNum,
        tp.ContractUID,
        tp.CContractCode,
        tp.TaskStatus,
        tp.VerifyStatus,
        tp.EPPCode,
        ei.EPPName,
        tp.BuilderCode,
        dd.PI_TypeName AS stoneAskName,
        bi.BuilderName,
        Placing,
        ConcreteMark,
        tp.placeStyle,
        ps.PI_TypeName placeStyleName,
        tp.OpenTime,
        tp.StgId as stgId,
        tp.Slump as slump,
        tp.Attribute as attribute
        from PT_TaskPlan AS tp
        left join PT_TaskSaleInvoice pt on tp.compid = pt.compid and tp.TaskId = pt.TaskId
        and pt.InvoiceType !=6
        LEFT OUTER JOIN
        dbo.DD_PublicInfo AS DD_PublicInfo_3
        ON tp.TaskStatus = DD_PublicInfo_3.PI_Values and DD_PublicInfo_3.PI_Class = 23
        and tp.compid =DD_PublicInfo_3.compid
        left join SM_EPPInfo ei on tp.EPPCode=ei.EPPCode and tp.compid=ei.compid
        left join SM_BuilderInfo bi on tp.BuilderCode = bi.BuilderCode and bi.compid=tp.compid
        left join DD_PublicInfo dd on tp.StoneAsk =dd.PI_Values and dd.PI_Class ='31' and tp.compid =dd.compid
        left join DD_PublicInfo ps on ps.PI_Class = 24 and ps.PI_Values = tp.PlaceStyle
        and tp.compid = ps.compid
        where tp.DeleteMark = 0
        and tp.RecStatus = 1
        <if test="beginTime != null and endTime != null">
            and (taskStatus = 1 or tp.preTime between #{beginTime} and #{endTime})
        </if>
        <if test="eppCode != null">
            and tp.eppCode = #{eppCode}
        </if>
        <if test="builderCode != null">
            and tp.builderCode = #{builderCode}
        </if>
        <if test="placing != null">
            and tp.placing like '%' + #{placing}+'%'
        </if>
        <if test="taskId != null">
            and tp.taskId like '%' + #{taskId} + '%'
        </if>
        <if test="taskStatus != null">
            and tp.taskStatus = #{taskStatus}
        </if>
        <if test="verifyStatus != null">
            and tp.VerifyStatus = #{verifyStatus}
        </if>
        and tp.compid = #{compid}
        group by tp.compid, DD_PublicInfo_3.PI_TypeName, tp.TaskId, tp.CreateTime, tp.PreTime, tp.TaskOverTime,
        tp.PreNum,
        tp.ContractUID, tp.CContractCode, tp.TaskStatus, tp.VerifyStatus, tp.EPPCode, ei.EPPName,
        tp.BuilderCode, dd.PI_TypeName, bi.BuilderName, Placing, ConcreteMark,tp.placeStyle,ps.PI_TypeName,
        tp.OpenTime,tp.StgId,tp.Slump,tp.Attribute
        order by tp.PreTime desc, tp.TaskId desc
    </select>


    <select id="getTaskPlanByTaskId" resultType="com.hntxrj.txerp.vo.TaskPlanVO">
        select task.TaskId,
               sm.ContractId,
               task.ContractUID,
               task.CContractCode,
               task.EPPCode,
               EPPName,
               task.BuilderCode,
               BuilderName,
               stgid,
               Attribute,
               TechnicalRequirements,
               task.preCarNum,
               task.grade,
               task.Address,
               task.linkTel,
               task.distance,
               Placing,
               PreNum,
               sum(ProduceNum)overNum,
               ConcreteMark,
               StoneAsk,
               dd.PI_TypeName    stoneAskName,
               PreTime,
               task.linkMan,
               StoneDia,
               Slump,
               CementVariety,
               cv.PI_TypeName as CementVarietyName,
               task.verifyStatus,
               TaskStatus,
               ts.PI_TypeName as TaskStatusName,
               preRemark,
               task.placeStyle,
               ps.PI_TypeName    placeStyleName
        from PT_TaskPlan task
                 left join PT_TaskSaleInvoice pt on task.compid = pt.compid and task.TaskId = pt.TaskId
                                                        and pt.InvoiceType !=6
                 left join SM_EPPInfo epp on epp.EPPCode = task.EPPCode and epp.compid = task.compid
                 left join SM_BuilderInfo builder
                           on builder.compid = task.compid and builder.BuilderCode = task.BuilderCode
                 left join DD_PublicInfo cv on cv.PI_Class = 32 and cv.PI_Values = CementVariety
            and task.compid = cv.compid
                 left join DD_PublicInfo ts on ts.PI_Class = 23 and ts.PI_Values = TaskStatus
            and task.compid = ts.compid
                 left join DD_PublicInfo ps on ps.PI_Class = 24 and ps.PI_Values = task.PlaceStyle
            and task.compid = ps.compid
                 left join DD_PublicInfo dd on dd.PI_Class = 31 and task.StoneAsk = dd.PI_Values
            and task.compid = dd.compid
                 left join SM_ContractMaster sm on task.ContractUID = sm.ContractUID and task.compid = sm.compid
        where task.compid = #{compid}
          and task.taskid = #{taskId}
        group by  task.TaskId, sm.ContractId, task.ContractUID, task.CContractCode, task.EPPCode, EPPName, task.BuilderCode, BuilderName, stgid, Attribute, TechnicalRequirements, task.preCarNum, task.grade, task.Address, task.linkTel, task.distance, Placing, PreNum, ConcreteMark, StoneAsk, dd.PI_TypeName, PreTime, task.linkMan, StoneDia, Slump, CementVariety, cv.PI_TypeName, task.verifyStatus, TaskStatus, ts.PI_TypeName, preRemark, task.placeStyle, ps.PI_TypeName
    </select>

    <select id="getSendCarList" resultType="com.hntxrj.txerp.vo.SendCarListVO">
        select totalProduceNum,
        ScrapNum,
        Attribute,
        pt.Taskid,
        stgid,
        pt.Slump as slump,
        EPPName,
        BuilderName,
        Placing,
        PreNum,
        PI_TypeName as PlaceStyleName,
        pp.totalSaleNum SaleNumTotal,
        pp.vehiceNumber,
        VehicleStatus,
        pp.RemnantNum remnantNum,
        pp.numberOfSignings,
        pt.adjustmentTime,
        pt.concreteMark,
        pt.defaultJump,
        pt.PreCarNum
        from PT_TaskPlan pt
        left join SM_EPPInfo sm on pt.compid = sm.compid and pt.EPPCode = sm.EPPCode
        left join SM_BuilderInfo sb on pt.compid = sb.compid and pt.BuilderCode = sb.BuilderCode
        left join (select TaskId,
        compid,
        VehicleStatus,
        sum(RemnantNum)RemnantNum,
        sum(ProduceNum) as totalProduceNum,
        sum(ScrapNum) as ScrapNum,
        sum(SaleNum - ReturnNum - SeparateNum - ScrapNum) totalSaleNum,
        max(VehiceNumber) vehiceNumber,
        sum(NumberOfSignings) numberOfSignings
        from PT_TaskSaleInvoice
        where InvoiceType != 6
        and upStatus=1
        and VehicleStatus not in ('8', '9', '10', '11')
        and VehicleStatus is not null
        group by TaskId, compid, VehicleStatus) pp
        on pt.compid = pp.compid and pt.TaskId = pp.TaskId
        left join(select PI_TypeName, PI_Values, compid
        from DD_PublicInfo
        where PI_Class = 24
        and PI_Status = 1
        group by PI_TypeName, PI_Values, compid) p
        on p.PI_Values = pt.PlaceStyle
        and pt.compid = p.compid
        where pt.compid = #{compid}
        <if test="searchName != null and searchName != '' ">
            and pt.Taskid like '%'+#{searchName}+'%' or EPPName like '%'+#{searchName}+'%' or Placing like
            '%'+#{searchName}+'%'
        </if>
        and pt.RecStatus = 1
        and pt.TaskStatus = 1
        and DeleteMark = 0
        order by pt.TaskId
    </select>


    <select id="getSendCarDistance" resultType="com.hntxrj.txerp.vo.SendCarDistanceVO">
        SELECT ti.SendTime,
               ti.Arrive_STTime,
               ti.VehicleID,
               ti.VehiceNumber,
               ti.VehicleStatus,
               ti.ThreeProduceNum,
               ti.SaleNum,
               ti.ProduceNum,
               ti.ReturnNum,
               ti.RemnantNum,
               ti.SeparateNum,
               ti.ScrapNum,
               ti.TotalNum,
               ps.PI_TypeName AS veicleStatusNama,
               pl.PersonalName,
               ue.empname,
               ti.PrintTotalNum
        FROM dbo.User_employee as ue
                 RIGHT OUTER JOIN
             dbo.PT_TaskSaleInvoice as ti ON
                     ue.compid = ti.compid AND
                     ue.OpId = ti.OpId
                 left join
             DD_PublicInfo ps on ps.PI_Class = 22 and ps.PI_Values = ti.VehicleStatus
                 and ue.compid = ps.compid
                 LEFT OUTER JOIN
             dbo.VM_PersonalInfo as pl ON ti.PersonalCode = pl.PersonalCode AND
                                          ti.compid = pl.compid
        where ti.compid = #{compid}
          and ti.TaskId = #{TaskId}
          and ti.InvoiceType != 6
        group by ti.SendTime, ti.Arrive_STTime, ti.VehicleID, ti.VehiceNumber, ti.VehicleStatus, ti.ThreeProduceNum,
                 ti.SaleNum, ti.ProduceNum, ti.ReturnNum, ti.RemnantNum, ti.SeparateNum, ti.ScrapNum, ti.TotalNum,
                 ps.PI_TypeName, pl.PersonalName, ue.empname, ti.PrintTotalNum
        order by SendTime desc
    </select>

    <select id="getSendCarCountNum" resultType="com.hntxrj.txerp.vo.SendCarTotalNumVO">
        select count(*) as conuntNum
        from PT_TaskPlan pt
                 left join (select TaskId,
                                   compid,
                                   VehicleStatus,
                                   sum(ProduceNum) as  totalProduceNum,
                                   sum(ScrapNum)   as  num,
                                   count(VehiceNumber) VehiceNumber
                            from PT_TaskSaleInvoice
                            where InvoiceType != 6
                            group by TaskId, compid, VehicleStatus) pp
                       on pt.compid = pp.compid and pt.TaskId = pp.TaskId
                 left join SM_EPPInfo sm on pt.compid = sm.compid and pt.EPPCode = sm.EPPCode
        where pt.compid = #{compid}
          and pt.RecStatus = 1
          and pt.TaskStatus = 1
          and DeleteMark = 0
          and VehicleStatus not in ('8', '9', '10', '11')
          and VehicleStatus is not null
        <if test="searchName != null and searchName != '' ">
          and pt.TaskId like '%'+#{searchName}+'%' or pt.Placing like '%'+#{searchName}+'%' or sm.EPPName like '%'+#{searchName}+'%'
        </if>
    </select>
    <select id="getSendCarTodayNum" resultType="com.hntxrj.txerp.vo.SendCarTotalNumVO">
        select sum(ti.ProduceNum) as todayTotalNum
        from PT_TaskSaleInvoice as ti
        where ti.compid = #{compid}
    </select>
    <!--  <select id="getSendCarYesterDayNum" resultType="SendCarTotalNumVO">

           select sum(ti.ProduceNum) as yesterdayTotalNum
           from PT_TaskSaleInvoice as ti
           where ti.compid = #{compid}  and ti.SendTime = #{time}
          <if test="time != null and time != '' ">
              and ti.SendTime = #{time}
          </if>
      </select>
      <select id="getMonthTotalNum" resultType="SendCarTotalNumVO">

           select sum(ti.ProduceNum) as monthTotalNum
           from PT_TaskSaleInvoice as ti
           where ti.compid = #{compid}
          <if test="monthStart != null and monthEnd != '' ">
              and ti.SendTime between #{monthStart} and #{monthEnd}
          </if>
      </select>-->

    <!--司机排班LED-->
    <select id="getDriverShiftLED" resultType="com.hntxrj.txerp.vo.DriverShiftLEDVO">
        select
        vm.CarID,
        vm.StirId,
        dd.StirName,
        vm.VehicleStatus
        from VM_VehicelManagement vm
        left join DD_StirInfoSet dd on vm.compid =dd.compid and vm.StirId =dd.StirId
        where vm.compid = #{compid} and vm.RecStatus=1 and dd.RecStatus=1
        and VehicleClass ='1'
        <if test="vehicleStatus != null and vehicleStatus != '' ">
            <if test="vehicleStatus!=1">
                and vm.VehicleStatus = #{vehicleStatus}
            </if>
            <if test="vehicleStatus==1">
                and vm.VehicleStatus in (1,7)
            </if>
        </if>

        <if test="stirId !=null and stirId != '' ">
            and vm.StirId =#{stirId}
        </if>
        order by vm.CreateTime
    </select>

    <!--调度派车中正在生产的搅拌车-->
    <select id="getProduceCars" resultType="com.hntxrj.txerp.vo.DriverShiftLEDVO">
        select
        vm.CarID,
        vm.StirId,
        dd.StirName,
        vm.VehicleStatus
        from VM_VehicelManagement vm
        left join DD_StirInfoSet dd on vm.compid =dd.compid and vm.StirId =dd.StirId
        where vm.compid = #{compid} and vm.RecStatus=1 and dd.RecStatus=1
        and VehicleClass ='1'
        and vm.VehicleStatus = 3
        order by vm.CreateTime
    </select>


    <!--查询出单个任务单下所有的车辆-->
    <select id="getCarsByTaskId" resultType="com.hntxrj.txerp.vo.DriverShiftLEDVO">
        select pt.VehicleID as carID,
               pt.VehicleStatus,
               dp.PI_TypeName  as statusName
        from PT_TaskSaleInvoice pt
                    left join  DD_PublicInfo dp on pt.compid=dp.compid and PI_Class=22 and pt.VehicleStatus=dp.PI_Values
        where pt.compid = #{compid}
         and TaskId=#{taskId}
          and pt.InvoiceType!=6
    </select>

    <!--施工方App使用的LED功能，只查询生产中的车辆-->
    <select id="getProductDriverShiftLED" resultType="com.hntxrj.txerp.vo.ProductDriverLEDVo">
        select top 3
        vm.CarID,
        vm.StirId,
        dd.StirName
        from VM_VehicelManagement vm
        left join DD_StirInfoSet dd on vm.compid =dd.compid and vm.StirId =dd.StirId
        where vm.compid = #{compid} and vm.RecStatus=1 and dd.RecStatus=1
        and VehicleClass ='1'
        and vm.VehicleStatus =3
        and vm.StirId =#{stirId}
        order by vm.CreateTime
    </select>

    <!--司机排班列表信息-->
    <select id="getDriverShiftList" resultType="com.hntxrj.txerp.vo.DriverShiftListVO">
        SELECT vs.id,
        VehicleID,
        vs.PersonalCode,
        PersonalName,
        WorkStarTime,
        WorkOverTime,
        vs.WorkClass,
        PI_TypeName as WorkClassName,
        Remarks
        FROM VM_PERSONALWORKCLASS vs
        left join VM_PersonalInfo vo ON vs.PersonalCode = vo.PersonalCode and vs.compid = vo.compid
        left join (
        SELECT PI_TypeName, PI_Values,compid FROM DD_PublicInfo where PI_Class = 16) pu on vs.WorkClass = pu.PI_Values
        and vs.compid = pu.compid
        where vs.compid = #{compid}
        and vs.recstatus = 1
        <if test="vehicleId !=null and vehicleId != '' ">
            and VehicleId like '%'+#{vehicleId}+'%'
        </if>
        <if test="workClass !=null and workClass != '' ">
            and vs.Workclass = #{workClass}
        </if>
        <if test="personalName !=null and personalName != '' ">
            and PersonalName like '%'+#{personalName}+'%'
        </if>
        <if test="beginTime != null and beginTime != ''">
            and vs.WorkStarTime <![CDATA[ >= ]]>  #{beginTime}
        </if>
        <if test="endTime != null and endTime != ''">
            and vs.WorkOverTime <![CDATA[ <= ]]> #{endTime}
        </if>

    </select>

    <!--查询司机-->
    <select id="getPersonalName" resultType="com.hntxrj.txerp.vo.PersonalNameVO">
        select PersonalName,
               PersonalCode
        from VM_PersonalInfo
        where compid = #{compid}
          and RecStatus = 1
    </select>

    <!--添加司机排班信息-->
    <insert id="getDriverShiftInsert" useGeneratedKeys="true">
        insert into VM_PERSONALWORKCLASS
        (compid,
         VehicleID,
         PersonalCode,
         WorkClass,
         Remarks,
         OpId,
         CreateTime,
         WorkStarTime,
         WorkOverTime,
         WorkTime,
         UpDown,
         UpDownMark,
         RecStatus)
        VALUES (#{compid},
                #{vehicleId},
                #{personalCode},
                #{workClass},
                #{remarks},
                #{opId},
                #{createTime},
                #{workStarTime},
                #{workOverTime},
                #{workTime},
                #{upDown},
                #{upDownMark},
                #{recStatus})
    </insert>

    <!--修改司机排班信息-->
    <update id="getDriverShiftUpdate" useGeneratedKeys="true">
        update VM_PERSONALWORKCLASS
        set VehicleID=#{vehicleId},
            PersonalCode=#{personalCode},
            WorkClass=#{workClass},
            Remarks=#{remarks},
            WorkStarTime=#{workStarTime},
            WorkOverTime=#{workOverTime},
            CreateTime=#{createTime}
        where compid = #{compid}
          and ID = #{id}
    </update>
    <update id="updateTechnicalRequirements">
        update PT_TaskPlan set TechnicalRequirements = #{pPNames},concreteMark =#{concreteMark} where compid =#{compid} and taskid =#{taskId}
    </update>

    <select id="selectid" resultType="com.hntxrj.txerp.vo.TaskPlanListVO">
        select TaskId
        from PT_TaskPlan
        where TaskId like #{taskid} + '%' and len(TaskId)=10
    </select>

    <!--任务单生产配比日志查询-->
    <select id="getProductionRatio" resultType="com.hntxrj.txerp.vo.ProductionRatioVO">
        select eppName,
        sm.eppCode,
        placing,
        dd.PI_TypeName operType,
        LM.operId,
        LM.operTime,
        LM.theoryFormulaCode,
        LM.stgId,
        LM.stirId,
        LM.slump,
        LM.whiskTime,
        u.empname opId,
        LM.recStatus,
        LM.TotalNum,
        lm.FormulaCode,
        lm.TaskId,
        lm.compid,
        lm.VerifyStatus,
        lm.VerifyId,
        lm.VerifyTime,
        WR1,
        WR2,
        WR3,
        WR4,
        WR5,
        WR6,
        WR7,
        WR8,
        Mat1,
        Mat2,
        Mat3,
        Mat4,
        Mat5,
        Mat6,
        Mat7,
        Mat8,
        Mat9,
        Mat10,
        Mat11,
        Mat12,
        Mat13,
        Mat14,
        Mat15,
        Matv1,
        Matv2,
        Matv3,
        Matv4,
        Matv5,
        Matv6,
        Matv7,
        Matv8,
        Matv9,
        Matv10,
        Matv11,
        Matv12,
        Matv13,
        Matv14,
        Matv15
        from LM_TaskProduceFormula_OperLog LM
        left join PT_TaskPlan pt on lm.compid =pt.compid and lm.TaskId =pt.TaskId
        left join SM_EPPInfo sm on pt.compid =sm.compid and pt.EPPCode =sm.EPPCode
        left join DD_PublicInfo dd on lm.OperType =dd.PI_Values and dd.PI_Class='63'
        and LM.compid =dd.compid
        left join User_employee u on lm.OpId =u.OpId and LM.compid =u.compid
        where LM.compid = #{compid}
        <if test="beginTime != null and beginTime != ''">
            and OperTime <![CDATA[ >= ]]>   #{beginTime}
        </if>
        <if test="endTime != null and endTime != ''">
            and OperTime <![CDATA[ <= ]]>  #{endTime}
        </if>
        <if test="formulaCode != null and formulaCode != '' ">
            and lm.formulaCode = #{formulaCode}
        </if>
        <if test="stgId != null and stgId != '' ">
            and lm.stgId =#{stgId}
        </if>
        <if test="stirId != null and stirId != '' ">
            and stirId =#{stirId}
        </if>
        <if test="eppCode != null and eppCode != '' ">
            and sm.eppCode=#{eppCode}
        </if>
        <if test="placing != null and placing != '' ">
            and placing =#{placing}
        </if>
        <if test="taskId != null and taskId != '' ">
            and lm.taskid =#{taskId}
        </if>
    </select>
    <!--任务单理论配比日志查询-->
    <select id="getTheoreticalproportioning" resultType="com.hntxrj.txerp.vo.ProductionRatioVO">
        select eppName,
        sm.eppCode,
        placing,
        dd.PI_TypeName operType,
        LM.operId,
        LM.operTime,
        LM.theoryFormulaCode,
        LM.stgId,
        LM.stirId,
        LM.slump,
        LM.whiskTime,
        u.empname opId,
        LM.recStatus,
        LM.TotalNum,
        lm.FormulaCode,
        lm.TaskId,
        lm.compid,
        lm.VerifyStatus,
        lm.VerifyId,
        lm.VerifyTime,
        WR1,
        WR2,
        WR3,
        WR4,
        WR5,
        WR6,
        WR7,
        WR8,
        Mat1,
        Mat2,
        Mat3,
        Mat4,
        Mat5,
        Mat6,
        Mat7,
        Mat8,
        Mat9,
        Mat10,
        Mat11,
        Mat12,
        Mat13,
        Mat14,
        Mat15,
        Matv1,
        Matv2,
        Matv3,
        Matv4,
        Matv5,
        Matv6,
        Matv7,
        Matv8,
        Matv9,
        Matv10,
        Matv11,
        Matv12,
        Matv13,
        Matv14,
        Matv15
        from LM_TaskTheoryFormula_OperLog LM
        left join PT_TaskPlan pt on lm.compid =pt.compid and lm.TaskId =pt.TaskId
        left join SM_EPPInfo sm on pt.compid =sm.compid and pt.EPPCode =sm.EPPCode
        left join DD_PublicInfo dd on lm.OperType =dd.PI_Values and dd.PI_Class='63'
        and LM.compid =dd.compid
        left join User_employee u on lm.OpId =u.OpId and LM.compid =u.compid
        where LM.compid = #{compid}
        <if test="beginTime != null and beginTime != ''">
            and OperTime <![CDATA[ >= ]]>   #{beginTime}
        </if>
        <if test="endTime != null and endTime != ''">
            and OperTime <![CDATA[ <= ]]>  #{endTime}
        </if>
        <if test="formulaCode != null and formulaCode != '' ">
            and lm.formulaCode = #{formulaCode}
        </if>
        <if test="stgId != null and stgId != '' ">
            and lm.stgId =#{stgId}
        </if>
        <if test="stirId != null and stirId != '' ">
            and stirId =#{stirId}
        </if>
        <if test="eppCode != null and eppCode != '' ">
            and sm.eppCode=#{eppCode}
        </if>
        <if test="placing != null and placing != '' ">
            and placing =#{placing}
        </if>
        <if test="taskId != null and taskId != '' ">
            and lm.taskid =#{taskId}
        </if>
    </select>
    <!--获取方量统计-->
    <select id="getSquareQuantitySum" resultType="com.hntxrj.txerp.vo.SquareQuantityVO">
        select sum(tsi.SaleNum - tsi.ReturnNum - tsi.SeparateNum - tsi.ScrapNum) saleNum,
               sum(ProduceNum)                                                   produceNum
        from PT_TaskSaleInvoice tsi
        left join PT_TaskPlan pt on tsi.compid = pt.compid and tsi.TaskId = pt.TaskId
        left join SM_EPPInfo sm on tsi.compid = sm.compid and pt.EPPCode = sm.EPPCode
        where tsi.compid = #{compid}
        and (VehiceNumber > '0')
        and (VehicleStatus = '3')
        and tsi.InvoiceType != 6
        and tsi.SendTime <![CDATA[ >= ]]>  #{beginTime}
        and tsi.SendTime <![CDATA[ <= ]]> #{endTime}
    </select>
    <select id="getQueryTime" resultType="com.hntxrj.txerp.vo.QueryTimeSetVO">
        select top 1 dd.compid,
               dd.QueryName,
               dd.QueryCode,
               dd.QueryType,
               dd.QueryStartTime,
               dd.QueryStopTime,
               dd.RecStatus,
               dd.CountInterval,
               dd.UpDownMark,
               dd.UpDown
        from DD_QueryTimeSet dd
        where compid = #{compid}
          and RecStatus = 1
          and QueryType = #{queryType}
          and QueryCode = 0
    </select>
    <select id="phoneStatistics" resultType="com.hntxrj.txerp.vo.SquareQuantityVO">
        select sum(tsi.SaleNum - tsi.ReturnNum - tsi.SeparateNum - tsi.ScrapNum) saleNum,
               sum(ProduceNum)                                                   produceNum

        from PT_TaskSaleInvoice tsi
        where tsi.compid = #{compid}
          and (VehiceNumber > '0')
          and (VehicleStatus = '3')
          and tsi.InvoiceType != 6
          and tsi.SendTime <![CDATA[ >= ]]>  #{beginTime}
          and tsi.SendTime <![CDATA[ <= ]]> #{endTime}
    </select>
    <select id="taskPlanPreNum" resultType="com.hntxrj.txerp.vo.SquareQuantityVO">
        select sum(PreNum) PreNum
        from PT_TaskPlan
        where compid = #{compid}
          and (PreTime between #{beginTime} and #{endTime})
          and deletemark = 0
    </select>
    <select id="queryTimeId" resultType="com.hntxrj.txerp.vo.QueryTimeSetVO">
        select top 1 dd.compid,
               dd.QueryName,
               dd.QueryCode,
               dd.QueryType,
               dd.QueryStartTime,
               dd.QueryStopTime,
               dd.RecStatus,
               dd.CountInterval,
               dd.UpDownMark,
               dd.UpDown
        from DD_QueryTimeSet dd
        where compid = #{compid}
          and RecStatus = 1
          and QueryType = 6
    </select>
    <select id="queryTimeTask" resultType="com.hntxrj.txerp.vo.QueryTimeSetVO">
        select dd.compid,
               dd.QueryName,
               dd.QueryCode,
               dd.QueryType,
               dd.QueryStartTime,
               dd.QueryStopTime,
               dd.RecStatus,
               dd.CountInterval,
               dd.UpDownMark,
               dd.UpDown
        from DD_QueryTimeSet dd
        where dd.compid = #{compid}
          and dd.RecStatus = 1
          and dd.QueryType = 1
          and dd.QueryCode = 12
    </select>
    <select id="todayTask" resultType="com.hntxrj.txerp.vo.TodayTaskVO">
        select COUNT(TaskId) as taskStatus
        from PT_TaskPlan
        where (PreTime between #{beginTime} and #{endTime})
          and TaskStatus = 0
          and RecStatus = 1
          and compid = #{compid}
        union all
        select COUNT(TaskId) as taskStatus
        from PT_TaskPlan
        where (PreTime between #{beginTime} and #{endTime})
          and TaskStatus = 1
          and RecStatus = 1
          and compid = #{compid}
        union all
        select COUNT(TaskId) as taskStatus
        from PT_TaskPlan
        where (PreTime between #{beginTime} and #{endTime})
          and TaskStatus = 2
          and RecStatus = 1
          and compid = #{compid}
        union all
        select COUNT(TaskId) as taskStatus
        from PT_TaskPlan
        where (PreTime between #{beginTime} and #{endTime})
          and TaskStatus = 3
          and RecStatus = 1
          and compid = #{compid}
        union all
        select COUNT(TaskId) as taskStatus
        from PT_TaskPlan
        where (PreTime between #{beginTime} and #{endTime})
          and TaskStatus = 4
          and RecStatus = 1
          and compid = #{compid}
    </select>

    <select id="getTaskIdCount" resultType="integer">
       select count(*) from PT_TaskPlan
       where compid=#{compid} and TaskId=#{taskId}
    </select>

    <select id="getPriceMarkup" resultType="com.hntxrj.txerp.vo.PriceMarkupVO">
        select * from SM_PriceMarkup where compid=#{compid} and RecStatus=1
    </select>

    <select id="getPriceMarkupByPPCode" resultType="com.hntxrj.txerp.vo.PriceMarkupVO">
        select * from SM_PriceMarkup where  compid=#{compid} and PPCode=#{ppCode}
    </select>

    <insert id="addTaskPriceMarkup">
        insert into PT_TASKPRICEMARKUP(compid, TaskId, PPCode,UnitPrice,SelfDiscPrice,JumpPrice,TowerCranePrice,OtherPrice)
        values (
        #{compid},
        #{taskId},
        #{ppCode},
        #{unitPrice},
        #{selfDiscPrice},
        #{jumpPrice},
        #{towerCranePrice},
        #{otherPrice}
        )
    </insert>


    <select id="getPPCodeBytaskId" resultType="string">
        select PPCode from PT_TASKPRICEMARKUP where compid=#{compid} and TaskId=#{taskId}
    </select>
    <select id="getSystemVarInit" resultType="com.hntxrj.txerp.vo.SystemVarInitVO">
        select * from De_SystemVarInit where compid =#{compid}  and SystemVar ='TaskMarkupToTR' and RecStatus =1
    </select>

    <delete id="deletePPCodeStatus">
        delete from PT_TASKPRICEMARKUP where compid=#{compid} and TaskId=#{taskId}
    </delete>


</mapper>
